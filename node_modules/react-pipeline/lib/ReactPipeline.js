'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ReactDefaultBatchingStrategy = require('react/lib/ReactDefaultBatchingStrategy');

var _ReactDefaultBatchingStrategy2 = _interopRequireDefault(_ReactDefaultBatchingStrategy);

var _ReactDefaultInjection = require('react/lib/ReactDefaultInjection');

var _ReactDefaultInjection2 = _interopRequireDefault(_ReactDefaultInjection);

var _ReactElement = require('react/lib/ReactElement');

var _ReactElement2 = _interopRequireDefault(_ReactElement);

var _ReactInstanceHandles = require('react/lib/ReactInstanceHandles');

var _ReactInstanceHandles2 = _interopRequireDefault(_ReactInstanceHandles);

var _ReactServerBatchingStrategy = require('react/lib/ReactServerBatchingStrategy');

var _ReactServerBatchingStrategy2 = _interopRequireDefault(_ReactServerBatchingStrategy);

var _ReactPipelineRenderingTransaction = require('./ReactPipelineRenderingTransaction');

var _ReactPipelineRenderingTransaction2 = _interopRequireDefault(_ReactPipelineRenderingTransaction);

var _ReactUpdates = require('react/lib/ReactUpdates');

var _ReactUpdates2 = _interopRequireDefault(_ReactUpdates);

var _instantiateReactComponent = require('react/lib/instantiateReactComponent');

var _instantiateReactComponent2 = _interopRequireDefault(_instantiateReactComponent);

var _emptyObject = require('fbjs/lib/emptyObject');

var _emptyObject2 = _interopRequireDefault(_emptyObject);

var _invariant = require('fbjs/lib/invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _package = require('../package.json');

var _package2 = _interopRequireDefault(_package);

var _startTasks = require('./startTasks');

var _startTasks2 = _interopRequireDefault(_startTasks);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

_ReactDefaultInjection2.default.inject();

/**
 * Class for executing a React pipeline.
 * @class
 */

var ReactPipeline = function () {
  function ReactPipeline() {
    _classCallCheck(this, ReactPipeline);
  }

  _createClass(ReactPipeline, null, [{
    key: 'start',


    /**
     * Runs all of the tasks within the pipeline. This is very similar to the
     * server rendering that ships with React.
     * @param {ReactElement} element
     * @return {Promise} the Promise associated with the Task tree execution
     */
    value: function start(element) {
      /* istanbul ignore next */
      !_ReactElement2.default.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'start(): You must pass a valid ReactElement.') : (0, _invariant2.default)(false) : undefined;

      var transaction = void 0;
      /* istanbul ignore next */
      try {
        var _ret = function () {
          _ReactUpdates2.default.injection.injectBatchingStrategy(_ReactServerBatchingStrategy2.default);

          var id = _ReactInstanceHandles2.default.createReactRootID();
          transaction = _ReactPipelineRenderingTransaction2.default.getPooled(true);

          return {
            v: new Promise(function (resolve, reject) {
              transaction.perform(function () {
                var componentInstance = (0, _instantiateReactComponent2.default)(element, null);
                componentInstance.mountComponent(id, transaction, _emptyObject2.default);

                _startTasks2.default.call(componentInstance).then(function () {
                  componentInstance.unmountComponent();
                  resolve();
                }).catch(reject);
              }, null);
            })
          };
        }();

        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
      } finally {
        _ReactPipelineRenderingTransaction2.default.release(transaction);
        // Revert to the DOM batching strategy since these two renderers
        // currently share these stateful modules.
        _ReactUpdates2.default.injection.injectBatchingStrategy(_ReactDefaultBatchingStrategy2.default);
      }
    }
    /**
     * The version of ReactPipeline
     */

  }]);

  return ReactPipeline;
}();

ReactPipeline.version = _package2.default.version;
exports.default = ReactPipeline;