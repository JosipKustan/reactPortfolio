'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ReactDOMComponent2 = require('react/lib/ReactDOMComponent');

var _ReactDOMComponent3 = _interopRequireDefault(_ReactDOMComponent2);

var _ReactCurrentOwner = require('react/lib/ReactCurrentOwner');

var _ReactCurrentOwner2 = _interopRequireDefault(_ReactCurrentOwner);

var _ReactPipelineChildReconciler = require('./ReactPipelineChildReconciler');

var _ReactPipelineChildReconciler2 = _interopRequireDefault(_ReactPipelineChildReconciler);

var _ReactPipelineStartMixin = require('./ReactPipelineStartMixin');

var _ReactPipelineStartMixin2 = _interopRequireDefault(_ReactPipelineStartMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReactPipelineDOMComponent = function (_ReactDOMComponent) {
  _inherits(ReactPipelineDOMComponent, _ReactDOMComponent);

  function ReactPipelineDOMComponent() {
    var _Object$getPrototypeO;

    var _temp, _this, _ret;

    _classCallCheck(this, ReactPipelineDOMComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(ReactPipelineDOMComponent)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.start = _ReactPipelineStartMixin2.default.start, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ReactPipelineDOMComponent, [{
    key: '_reconcilerInstantiateChildren',


    /**
     * This is a duplicate of the same method found with
     * react/lib/ReactMultiChild, the only difference is we are using the
     * ReactPipelineChildReconciler for instantiation.
     */
    value: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
      if (process.env.NODE_ENV !== 'production') {
        if (this._currentElement) {
          try {
            _ReactCurrentOwner2.default.current = this._currentElement._owner;
            return _ReactPipelineChildReconciler2.default.instantiateChildren(nestedChildren, transaction, context);
          } finally {
            _ReactCurrentOwner2.default.current = null;
          }
        }
      }
      return _ReactPipelineChildReconciler2.default.instantiateChildren(nestedChildren, transaction, context);
    }
  }]);

  return ReactPipelineDOMComponent;
}(_ReactDOMComponent3.default);

exports.default = ReactPipelineDOMComponent;