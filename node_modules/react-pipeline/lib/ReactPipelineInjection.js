'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ReactInjection = require('react/lib/ReactInjection');

var _ReactInjection2 = _interopRequireDefault(_ReactInjection);

var _ReactDefaultInjection = require('react/lib/ReactDefaultInjection');

var _ReactDefaultInjection2 = _interopRequireDefault(_ReactDefaultInjection);

var _ReactPipelineDOMComponent = require('./ReactPipelineDOMComponent');

var _ReactPipelineDOMComponent2 = _interopRequireDefault(_ReactPipelineDOMComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactPipelineInjection = function () {
  function ReactPipelineInjection() {
    _classCallCheck(this, ReactPipelineInjection);
  }

  _createClass(ReactPipelineInjection, null, [{
    key: 'inject',

    /**
     * This is identical to the same method found within
     * react/lib/ReactDefaultInjection, with the exception we are using own
     * custom ReactPipelineDOMComponent.
     */
    value: function inject() {
      _ReactDefaultInjection2.default.inject();
      _ReactInjection2.default.NativeComponent.injectGenericComponentClass(_ReactPipelineDOMComponent2.default);
    }
  }]);

  return ReactPipelineInjection;
}();

exports.default = ReactPipelineInjection;